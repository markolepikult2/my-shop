plugins {
    id 'base'
}

// This subproject hosts an Angular application. We use Gradle to orchestrate Node/npm commands.

description = 'frontend-angular'

def isWindows = System.getProperty('os.name').toLowerCase().contains('win')

def npmCommand = isWindows ? 'npm.cmd' : 'npm'

def ngCommand = isWindows ? 'ng.cmd' : 'ng'

def npxCmd = isWindows ? 'npx.cmd' : 'npx'

// Using project.layout.projectDirectory for workingDir, avoiding extra properties

tasks.register('npmInstall', Exec) {
    group = 'frontend'
    description = 'Run npm install in the Angular project'
    workingDir = project.layout.projectDirectory.asFile
    commandLine npmCommand, 'install'
    inputs.file file('package.json')
    inputs.file file('package-lock.json')
    outputs.dir file('node_modules')
}

tasks.register('ngBuild', Exec) {
    group = 'frontend'
    description = 'Build Angular project for production'
    dependsOn tasks.named('npmInstall')
    workingDir = project.layout.projectDirectory.asFile
    commandLine npxCmd, 'ng', 'build', '--configuration', 'production'
    inputs.dir file('my-app/src')
    inputs.dir file('my-app/public')
    inputs.file file('angular.json')
    outputs.dir file('dist')
}

// Helper variable to use npx in cross-platform manner

// Task to scaffold a new Angular application within this workspace (use instead of `ng new`)
tasks.register('ngGenerateApp', Exec) {
    group = 'frontend'
    description = 'Generate a new Angular application inside the existing workspace: -PappName=my-new-app'
    dependsOn tasks.named('npmInstall')
    workingDir = project.layout.projectDirectory.asFile
    def appName = project.findProperty('appName') ?: ''
    if (!appName) {
        throw new GradleException("Please provide -PappName=<name> to generate a new Angular application inside the workspace.")
    }
    commandLine npxCmd, 'ng', 'generate', 'application', appName, '--standalone'
}

// Hook into standard build lifecycle so `gradlew :frontend-angular:build` works
tasks.named('build') {
    dependsOn tasks.named('ngBuild')
}

// Ensure `clean` also removes Angular dist
tasks.named('clean') {
    doLast {
        delete file('dist')
    }
}
